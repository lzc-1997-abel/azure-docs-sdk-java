### YamlMime:JavaType
uid: "com.azure.core.implementation.serializer.JacksonSerializer"
fullName: "com.azure.core.implementation.serializer.JacksonSerializer"
name: "JacksonSerializer"
nameWithType: "JacksonSerializer"
summary: "Jackson based implementation of the <xref uid=\"com.azure.core.util.serializer.JsonSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerializer\"></xref>. This can be used as a default Json serializer if no JsonSerializerProvider is in the class path."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JacksonSerializer implements JsonSerializer"
constructors:
- "com.azure.core.implementation.serializer.JacksonSerializer.JacksonSerializer()"
methods:
- "com.azure.core.implementation.serializer.JacksonSerializer.<T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
- "com.azure.core.implementation.serializer.JacksonSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
- "com.azure.core.implementation.serializer.JacksonSerializer.serialize(java.io.OutputStream,java.lang.Object)"
- "com.azure.core.implementation.serializer.JacksonSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)"
type: "class"
implements:
- "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.implementation.serializer"
artifact: com.azure:azure-core:1.14.1
