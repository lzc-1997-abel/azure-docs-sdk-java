### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync*"
fullName: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync"
name: "analyzeLayoutAsync"
nameWithType: "FormRecognizerClientImpl.analyzeLayoutAsync"
members:
- uid: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.ContentType1,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.ai.formrecognizer.implementation.models.Language,java.util.List<java.lang.String>)"
  fullName: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(ContentType1 contentType, Flux<ByteBuffer> fileStream, long contentLength, Language language, List<String> pages)"
  name: "analyzeLayoutAsync(ContentType1 contentType, Flux<ByteBuffer> fileStream, long contentLength, Language language, List<String> pages)"
  nameWithType: "FormRecognizerClientImpl.analyzeLayoutAsync(ContentType1 contentType, Flux<ByteBuffer> fileStream, long contentLength, Language language, List<String> pages)"
  summary: "Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff' or 'image/bmp'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed."
  parameters:
  - description: "Upload file type."
    name: "contentType"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.ContentType1?alt=com.azure.ai.formrecognizer.implementation.models.ContentType1&text=ContentType1\" data-throw-if-not-resolved=\"False\" />"
  - description: ".json, .pdf, .jpg, .png or .tiff type file stream."
    name: "fileStream"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The BCP-47 language code of the text in the document. Currently, only English ('en'), Dutch\n     (\\u2018nl\\u2019), French (\\u2018fr\\u2019), German (\\u2018de\\u2019), Italian (\\u2018it\\u2019), Portuguese (\\u2018pt'), simplified Chinese ('zh-Hans') and\n     Spanish ('es') are supported (print \\u2013 nine languages and handwritten \\u2013 English only). Layout supports auto\n     language identification and multi language documents, so only provide a language code if you would like to\n     force the documented to be processed as that specific language."
    name: "language"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.Language?alt=com.azure.ai.formrecognizer.implementation.models.Language&text=Language\" data-throw-if-not-resolved=\"False\" />"
  - description: "Custom page numbers for multi-page documents(PDF/TIFF), input the number of the pages you want to\n     get OCR result. For a range of pages, use a hyphen. Separate each page or range with a comma or space."
    name: "pages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void analyzeLayoutAsync(ContentType1 contentType, Flux<ByteBuffer> fileStream, long contentLength, Language language, List<String> pages)"
- uid: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(com.azure.ai.formrecognizer.implementation.models.Language,java.util.List<java.lang.String>,com.azure.ai.formrecognizer.implementation.models.SourcePath)"
  fullName: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeLayoutAsync(Language language, List<String> pages, SourcePath fileStream)"
  name: "analyzeLayoutAsync(Language language, List<String> pages, SourcePath fileStream)"
  nameWithType: "FormRecognizerClientImpl.analyzeLayoutAsync(Language language, List<String> pages, SourcePath fileStream)"
  summary: "Extract text and layout information from a given document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff' or 'image/bmp'. Alternatively, use 'application/json' type to specify the location (Uri or local path) of the document to be analyzed."
  parameters:
  - description: "The BCP-47 language code of the text in the document. Currently, only English ('en'), Dutch\n     (\\u2018nl\\u2019), French (\\u2018fr\\u2019), German (\\u2018de\\u2019), Italian (\\u2018it\\u2019), Portuguese (\\u2018pt'), simplified Chinese ('zh-Hans') and\n     Spanish ('es') are supported (print \\u2013 nine languages and handwritten \\u2013 English only). Layout supports auto\n     language identification and multi language documents, so only provide a language code if you would like to\n     force the documented to be processed as that specific language."
    name: "language"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.Language?alt=com.azure.ai.formrecognizer.implementation.models.Language&text=Language\" data-throw-if-not-resolved=\"False\" />"
  - description: "Custom page numbers for multi-page documents(PDF/TIFF), input the number of the pages you want to\n     get OCR result. For a range of pages, use a hyphen. Separate each page or range with a comma or space."
    name: "pages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: ".json, .pdf, .jpg, .png or .tiff type file stream."
    name: "fileStream"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.SourcePath?alt=com.azure.ai.formrecognizer.implementation.models.SourcePath&text=SourcePath\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void analyzeLayoutAsync(Language language, List<String> pages, SourcePath fileStream)"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer.implementation"
artifact: com.azure:azure-ai-formrecognizer:3.1.0-beta.2
